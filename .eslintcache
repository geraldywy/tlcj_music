[{"C:\\Users\\Gerald\\Desktop\\tlcj_music_temp\\src\\reportWebVitals.js":"1","C:\\Users\\Gerald\\Desktop\\tlcj_music_temp\\src\\App.js":"2","C:\\Users\\Gerald\\Desktop\\tlcj_music_temp\\src\\index.js":"3","C:\\Users\\Gerald\\Desktop\\tlcj_music_temp\\src\\components\\Home.js":"4","C:\\Users\\Gerald\\Desktop\\tlcj_music_temp\\src\\components\\NavBar.js":"5","C:\\Users\\Gerald\\Desktop\\tlcj_music_temp\\src\\components\\HomePanel.js":"6","C:\\Users\\Gerald\\Desktop\\tlcj_music_temp\\src\\components\\MusicPage.js":"7","C:\\Users\\Gerald\\Desktop\\tlcj_music_temp\\src\\components\\VideoContainer.js":"8","C:\\Users\\Gerald\\Desktop\\tlcj_music_temp\\src\\components\\Test.js":"9"},{"size":362,"mtime":1606820512981,"results":"10","hashOfConfig":"11"},{"size":507,"mtime":1608105412826,"results":"12","hashOfConfig":"11"},{"size":500,"mtime":1607927638419,"results":"13","hashOfConfig":"11"},{"size":1404,"mtime":1607939778207,"results":"14","hashOfConfig":"11"},{"size":1052,"mtime":1608115040212,"results":"15","hashOfConfig":"11"},{"size":2091,"mtime":1608190208045,"results":"16","hashOfConfig":"11"},{"size":2881,"mtime":1608120959706,"results":"17","hashOfConfig":"11"},{"size":1194,"mtime":1608114731947,"results":"18","hashOfConfig":"11"},{"size":344,"mtime":1608105308817,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1hqgib7",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"C:\\Users\\Gerald\\Desktop\\tlcj_music_temp\\src\\reportWebVitals.js",[],["43","44"],"C:\\Users\\Gerald\\Desktop\\tlcj_music_temp\\src\\App.js",["45"],"import React from \"react\"\nimport Home from \"./components/Home\"\nimport MusicPage from \"./components/MusicPage\"\nimport Test from \"./components/Test\"\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport \"./App.css\"\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/music\">\n          <MusicPage />\n        </Route>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","C:\\Users\\Gerald\\Desktop\\tlcj_music_temp\\src\\index.js",[],"C:\\Users\\Gerald\\Desktop\\tlcj_music_temp\\src\\components\\Home.js",[],"C:\\Users\\Gerald\\Desktop\\tlcj_music_temp\\src\\components\\NavBar.js",[],"C:\\Users\\Gerald\\Desktop\\tlcj_music_temp\\src\\components\\HomePanel.js",["46","47","48"],"C:\\Users\\Gerald\\Desktop\\tlcj_music_temp\\src\\components\\MusicPage.js",["49","50"],"import NavBar from \"./NavBar\"\r\nimport MediaQuery from \"react-responsive\"\r\n\r\nimport video1 from \"../videos/video1.mp4\"\r\nimport VideoContainer from \"./VideoContainer\"\r\n\r\nimport \"../fonts.css\";\r\n\r\nconst MusicPage = () => {\r\n\r\n    // pull list of videos/sound clips from backend\r\n    // display video/sound clips with description\r\n    // format of clips:\r\n    /*\r\n     clip: {\r\n        id: \"\" <source video id to look use>\r\n        type: \"\" <source its from, eg: youtube>\r\n     }\r\n\r\n     example:\r\n     const firstVideo = {\r\n        id: \"tEA2prf_x48\",\r\n        type: \"youtube\",\r\n    }\r\n\r\n    */\r\n   const firstVideo = {\r\n        id: \"tEA2prf_x48\",\r\n        type: \"youtube\",\r\n    }\r\n\r\n   const secondVideo = {\r\n        id: \"ewBulJdtGlM\",\r\n        type: \"youtube\"\r\n    }\r\n\r\n    const thirdVideo = {\r\n        id: \"2QKARCPO3sA\",\r\n        type: \"youtube\"\r\n    }\r\n    \r\n    const fourthVideo = {\r\n        id: \"hj3h4Hdj2U8\",\r\n        type: \"youtube\"\r\n    }\r\n\r\n    // max 3 pinned videos\r\n    const clipList = [firstVideo, thirdVideo, fourthVideo]\r\n\r\n    return (\r\n        <div className=\"musicPage\">\r\n            <MediaQuery minDeviceWidth={769}>\r\n                <NavBar mobile={false} />\r\n            </MediaQuery>\r\n            <MediaQuery maxDeviceWidth={768}>\r\n                <NavBar mobile={true} />\r\n            </MediaQuery>\r\n\r\n            \r\n            <div className=\"musicPageContent\">\r\n                <h1 className=\"reelTitle\">Pinned</h1>\r\n                <VideoContainer clips={clipList} />\r\n\r\n                <div className=\"colContainer\">\r\n                    <h3 className=\"colTitle\">Originals</h3>\r\n                    <ul className=\"songTitle\">\r\n                        {[1, 2, 3, 4, 5, 6, 7].map(i => \r\n                            <li className=\"indivTitle\" key={i}>\r\n                                <a href=\"https://www.youtube.com/watch?v=hj3h4Hdj2U8\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                    Worth It - Kodaline (Acoustic Cover)\r\n                                </a>\r\n                            </li>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"colContainer\">\r\n                    <h3 className=\"colTitle\">Covers</h3>\r\n                    <ul className=\"songTitle\">\r\n                        {[1, 2, 3, 4, 5, 6, 7].map(i => \r\n                            <li className=\"indivTitle\" key={i}>\r\n                                <a href=\"https://www.youtube.com/watch?v=hj3h4Hdj2U8\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                    Worth It - Kodaline (Acoustic Cover)\r\n                                </a>\r\n                            </li>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default MusicPage;","C:\\Users\\Gerald\\Desktop\\tlcj_music_temp\\src\\components\\VideoContainer.js",["51"],"import React from \"react\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport ReactPlayer from \"react-player\"\r\n\r\nconst ClipSlide = ({ url, isSelected }) => (\r\n    <ReactPlayer width=\"100%\" url={url} playing={isSelected} controls={true} />\r\n);\r\n\r\nconst customRenderItem = (item, props) => <item.type {...item.props} {...props} />;\r\n\r\nconst getVideoThumb = (videoId) => `https://img.youtube.com/vi/${videoId}/default.jpg`;\r\n\r\nconst getVideoId = (url) => url.substr('https://www.youtube.com/embed/'.length, url.length);\r\n\r\nconst customRenderThumb = (children) =>\r\n    children.map((item) => {\r\n        const videoId = getVideoId(item.props.url);\r\n        return <img src={getVideoThumb(videoId)} />;\r\n    });\r\n\r\nconst VideoContainer = ({ clips }) => {\r\n\r\n    return (\r\n        <Carousel renderItem={customRenderItem} renderThumbs={customRenderThumb}>\r\n            {clips.map((clip, i) => \r\n                <ClipSlide key={`${clip.type}-${i}`} url={`https://www.youtube.com/embed/${clip.id}`} />\r\n            )}\r\n            \r\n        </Carousel>\r\n        \r\n    )\r\n}\r\n\r\nexport default VideoContainer;","C:\\Users\\Gerald\\Desktop\\tlcj_music_temp\\src\\components\\Test.js",["52","53"],"import React from \"react\"\r\n\r\nimport {Link} from \"react-router-dom\"\r\nimport Headroom from \"react-headroom\"\r\nimport NavBar from \"./NavBar\"\r\n\r\nimport sigLogo from \"../images/sig-logo.jpg\"\r\n\r\nconst Test = (props) => {\r\n    \r\n    return (\r\n        <Headroom>\r\n            <NavBar />\r\n        </Headroom>\r\n           \r\n    )\r\n}\r\n\r\nexport default Test",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":4,"column":8,"nodeType":"60","messageId":"61","endLine":4,"endColumn":12},{"ruleId":"58","severity":1,"message":"62","line":3,"column":22,"nodeType":"60","messageId":"61","endLine":3,"endColumn":28},{"ruleId":"58","severity":1,"message":"63","line":4,"column":5,"nodeType":"60","messageId":"61","endLine":4,"endColumn":11},{"ruleId":"58","severity":1,"message":"64","line":5,"column":5,"nodeType":"60","messageId":"61","endLine":5,"endColumn":10},{"ruleId":"58","severity":1,"message":"65","line":4,"column":8,"nodeType":"60","messageId":"61","endLine":4,"endColumn":14},{"ruleId":"58","severity":1,"message":"66","line":32,"column":10,"nodeType":"60","messageId":"61","endLine":32,"endColumn":21},{"ruleId":"67","severity":1,"message":"68","line":19,"column":16,"nodeType":"69","endLine":19,"endColumn":52},{"ruleId":"58","severity":1,"message":"70","line":3,"column":9,"nodeType":"60","messageId":"61","endLine":3,"endColumn":13},{"ruleId":"58","severity":1,"message":"71","line":7,"column":8,"nodeType":"60","messageId":"61","endLine":7,"endColumn":15},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'Test' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'video1' is defined but never used.","'secondVideo' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'sigLogo' is defined but never used.","no-global-assign","no-unsafe-negation"]