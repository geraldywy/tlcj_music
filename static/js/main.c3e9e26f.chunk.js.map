{"version":3,"sources":["logo.svg","components/Header.js","components/Home.js","components/About.js","components/Music.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","root","flexGrow","background","border","borderRadius","boxShadow","color","height","padding","logo","width","Header","classes","React","useState","value","setValue","AppBar","position","className","Toolbar","Grid","justify","container","xs","item","to","src","alt","Tabs","onChange","e","v","aria-label","Tab","label","component","Link","Home","style","About","Music","App","backgroundStyles","change","setState","state","length","minHeight","animation","this","id","setInterval","clearInterval","basename","path","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c3e9e26f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import AppBar from \"@material-ui/core/AppBar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport React from \"react\";\r\nimport { Tabs } from \"@material-ui/core\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    background: 'linear-gradient(45deg, #1f1f1f 30%, #545454 90%)',\r\n    border: 0,\r\n    borderRadius: 3,\r\n    boxShadow: '0 3px 5px 2px rgba(5, 5, 5, .3)',\r\n    color: 'white',\r\n    height: '4%',\r\n    padding: '0 30px',\r\n  },\r\n  logo: {\r\n    width: 135,\r\n    height: 43.54\r\n  }\r\n});\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  \r\n  return (\r\n    <nav>\r\n      <AppBar position=\"static\" className={classes.root}>\r\n        <Toolbar>\r\n          <Grid justify={\"space-between\"} container>\r\n            <Grid xs={1} item>\r\n              <Link to=\"/\">\r\n                <img\r\n                  className={classes.logo}\r\n                  src={\r\n                    \"https://upload.wikimedia.org/wikipedia/commons/a/a7/React-icon.svg\"\r\n                  }\r\n                  alt=\"TLCJ Logo\"\r\n                />\r\n              </Link>\r\n            </Grid>\r\n            <Grid xs={4} item>\r\n              <Grid container justify={\"center\"}>\r\n                <Tabs\r\n                  onChange={(e, v) => setValue(v)}\r\n                  value={value}\r\n                  aria-label=\"Navigation Tabs\"\r\n                  \r\n                >\r\n                  <Tab label={\"music\"} component={Link} to=\"/music\" />\r\n                  <Tab label={\"about\"} component={Link} to=\"/about\" />\r\n                </Tabs>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={1} />\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nconst Home = ({ style }) => {\r\n    return (\r\n        <div style={style}>\r\n            so this is the home\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React from \"react\";\r\n\r\nconst About = ({ style }) => {\r\n\r\n    return (\r\n        <div style={style}>\r\n            so this is the about page\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","import React from \"react\";\r\n\r\nconst Music = ({ style }) => {\r\n\r\n    return (\r\n        <div style={style}>\r\n            so this is the music page\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music","import React, { useState, useEffect } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport Header from './components/Header'\r\nimport Home from './components/Home'\r\nimport About from './components/About'\r\nimport Music from './components/Music'\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      style: {\r\n        background: \"linear-gradient(45deg, #1f1f1f 30%, #545454 90%)\",\r\n        color: \"white\",\r\n        minHeight: \"100vh\",\r\n        animation: \"fade 1s ease-in\"\r\n      },\r\n      background: 0,\r\n      className: \"fadein\"\r\n    }\r\n  }\r\n  backgroundStyles = [\r\n    \"linear-gradient(45deg, #1f1f1f 30%, #545454 90%)\",\r\n    \"linear-gradient(45deg, #1f1f1f 30%, #121212 90%)\", \r\n    \"linear-gradient(45deg, #121212 30%, #121212 90%)\",\r\n  ]\r\n  \r\n  change = () => {\r\n    this.setState({\r\n      style: { \r\n        ...this.state.style, \r\n        background: this.backgroundStyles[(this.state.background + 1) % this.backgroundStyles.length]\r\n      },\r\n      background: this.state.background + 1\r\n    })\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.id = setInterval(() => {\r\n        this.change()\r\n      }, 3000)\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.id)\r\n  }\r\n  render() {\r\n    return (\r\n      <Router basename=\"/tclj_music/\">\r\n        <div style={{background: this.state.style.background}}>\r\n          <Header />\r\n        </div>\r\n        <Switch>\r\n          <Route path=\"/about\">\r\n            <About style={this.state.style} />\r\n          </Route>\r\n          <Route path=\"/music\">\r\n            <Music style={this.state.style} />\r\n          </Route>\r\n          <Route path=\"/\" >\r\n            <Home style={this.state.style} />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}